// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

namespace Microsoft.Devices.Midi2
{
    enum WindowsMidiServicesCheckError
    {
        IncompatibleVersion = 100,
        NotPresent = 400
    };


    [default_interface]
    runtimeclass MidiServices
    {
        Boolean IsOpen { get; };

        // Checks to see if Windows MIDI Services is running and is compatible with this SDK version
        // Because of how we're aligning versions, in most cases, the SDK version will be compatible, 
        // but it's good to check and be ready in case it is not
        static Boolean CheckForWindowsMidiServices(out WindowsMidiServicesCheckError errorResult);

        // The version of Windows MIDI Services installed on this PC (makes an API call to retrieve this)
        static String GetInstalledWindowsMidiServicesVersion();

        // version of this SDK the application was compiled with
        static String SdkVersion{ get; };
        static String MinimumCompatibleMidiServicesVersion{ get; };
        static Windows.Foundation.Uri LatestMidiServicesInstallUri{ get; };
    }
}