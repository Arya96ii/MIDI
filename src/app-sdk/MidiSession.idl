// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services Client SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================


import "MidiEndpoint.idl";
import "MidiEndpointConnectOptions.idl";

namespace Microsoft.Devices.Midi2
{
    [default_interface]
    runtimeclass MidiSession : Windows.Foundation.IClosable
    {
        // Session management ===================================================================

        // captures the PID, app name, etc.
        static MidiSession CreateNewSession(String sessionName);

        Boolean IsOpen { get; };

        // close the session and release resources
        void Close();




        // this really should be read-only to users of this class
        Windows.Foundation.Collections.IObservableVector<MidiEndpoint> ConnectedEndpoints { get; };

        // uses the enumeration information to connect to an endpoint
        // adds it to the list of connected endpoints. The boolean 
        // option determines if all incoming messages from that endpoint
        // are handled here, or they are handled in the individual 
        // endpoint instances. It's one or the other to avoid replicating
        // messages.
        MidiEndpoint ConnectToEndpoint(
            String midiEndpointId, 
            Boolean routeIncomingMessagesToSession, 
            MidiEndpointConnectOptions options);

        void DisconnectFromEndpoint(String midiEndpointId);


        // utility methods =======================================================================

        // gets the current MIDI timestamp
        UInt64 GetMidiTimestamp();

        // returns the units per second for the timestamp
        UInt64 GetMidiTimestampFrequency();

    }
}