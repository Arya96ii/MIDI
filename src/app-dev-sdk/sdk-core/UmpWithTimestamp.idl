// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================


// NOTE: This is likely to change. We're working on the correct buffers to speak to the service
// and API. That buffer also deals with timestamps and more. Intent is to provide UMP types
// for folks who wish to use them, and direct access to buffers of MIDI words for those who
// prefer that approach.

import "Ump.idl";

namespace Microsoft.Devices.Midi2
{
    // TODO: Timestamps will come in for each message, and go out with each message. Include them 
    // in the base Ump class, or create a wrapper class? A wrapper class *could* also include a 
    // JR timestamp if we decide to just pass them through

    [default_interface]
    unsealed runtimeclass UmpWithTimestamp
    {
        UmpWithTimestamp();

        UInt64 Timestamp{ get; set; };

        Microsoft.Devices.Midi2.Ump Ump{ get; set; };

    }
}