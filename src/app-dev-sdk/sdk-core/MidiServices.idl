// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

import "MidiTransportInformation.idl";

namespace Microsoft.Devices.Midi2
{
    enum WindowsMidiServicesCheckResult
    {
        PresentAndUsable =0,
        IncompatibleVersion = 100,
        NotPresent = 400,
    };


    [default_interface]
    runtimeclass MidiServices
    {
        // Checks to see if Windows MIDI Services is running and is compatible with this SDK version
        // Because of how we're aligning versions, in most cases, the SDK version will be compatible, 
        // but it's good to check and be ready in case it is not
        static WindowsMidiServicesCheckResult CheckForWindowsMidiServices();

        // The version of Windows MIDI Services installed on this PC
        static String GetInstalledWindowsMidiServicesVersion();

        // version of this SDK the application was compiled with
        static String SdkVersion{ get; };
        static String MinimumCompatibleMidiServicesVersion{ get; };
        static Windows.Foundation.Uri LatestMidiServicesInstallUri{ get; };

        // list all the installed transports like Virtual, USB, BLE1, etc
        static IVector<MidiTransportInformation> GetInstalledTransports();


    }
}