import "Ump32.idl";
import "Ump64.idl";
import "Ump96.idl";
import "Ump128.idl";

namespace Windows.Devices.Midi
{
    // for processing a single message. We may need to provide
    // an interface which supports processing multiple messages
    // or a stream, or supports transforming the number of
    // messages so that it is more or less than what was passed
    // in. Those may require just passing in a stream reference
    // instead, which has some threading implications

    interface IMidiOutgoingMessageProcessor
    {
        // These return true if the message should be passed along
        // and false if they should be removed from the stream
        [default_overload]
        Boolean ProcessMessage(out Ump32 messageToProcess);
        Boolean ProcessMessage(out Ump64 messageToProcess);
        Boolean ProcessMessage(out Ump96 messageToProcess);
        Boolean ProcessMessage(out Ump128 messageToProcess);
    };
}