// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "midl_defines.h"
MIDI_IDL_IMPORT

// this has the most basic message building as required in the API. For more
// advanced message building, including specific messages, see the SDK.

import "IMidiUniversalPacket.idl";
import "MidiMessage32.idl";
import "MidiMessage64.idl";


namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    static runtimeclass MidiMessageTranslator
    {
        // TODO: These may need to return IMidiUniversalPacket instead in case
        // of messages that still translate to MidiMessage32


        static MidiMessage64 UpscaleMidi1ChannelVoiceMessageToMidi2(
            MidiMessage32 originalMessage
        );

        static MidiMessage64 UpscaleMidi1ChannelVoiceMessageToMidi2(
            MIDI_TIMESTAMP timestamp,
            UInt8 groupIndex,
            UInt8 statusByte
        );

        static MidiMessage64 UpscaleMidi1ChannelVoiceMessageToMidi2(
            MIDI_TIMESTAMP timestamp,
            UInt8 groupIndex,
            UInt8 statusByte,
            UInt8 dataByte1
        );

        static MidiMessage64 UpscaleMidi1ChannelVoiceMessageToMidi2(
            MIDI_TIMESTAMP timestamp,
            UInt8 groupIndex,
            UInt8 statusByte,
            UInt8 dataByte1,
            UInt8 dataByte2
        );



        static MidiMessage32 DownscaleMidi2ChannelVoiceMessageToMidi1(
            MidiMessage64 originalMessage
        );


    };
}