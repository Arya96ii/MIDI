// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App SDK and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

// Custom event sinks to provide MIDI 1.0 port-like views into the stream for 
// incoming messages

#include "midl_defines.h"
MIDI_IDL_IMPORT

import "MidiMessageReceivedEventArgs.idl";
import "IMidiInputConnection.idl";
import "IMidiEndpointMessageProcessingPlugin.idl";

namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [MIDI_INTERFACE_UUID("38d87ced-b820-41bd-9a44-d43a19c1dfcb",1.0)]
    interface IMidiEndpointMessageListener requires IMidiEndpointMessageProcessingPlugin
    {
        IMidiInputConnection InputConnection{ get; set; }; 

        // TODO: API design recommendation is to avoid "out" parameters and instead have a return object

        // called by the endpoint connection when a message is received
        // if the listener is also an event source, it may raise the message received event
        void ProcessIncomingMessage(
            MidiMessageReceivedEventArgs args, 
            out Boolean skipFurtherListeners, 
            out Boolean skipMainMessageReceivedEvent);

    }

}