// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "midl_defines.h"
MIDI_IDL_IMPORT

import "MidiEndpointTypeEnum.idl";
import "MidiProtocolEnum.idl";

namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [default_interface]
    runtimeclass MidiVirtualDeviceManager
    {
        //// vector of device Ids + a tag object
        //IMapView<String, IInspectable> VirtualDevices{ get; };

        //// map of device Id, endpointId + tag object
        //IMapView<String, String, IInspectable> VirtualEndpoints{ get; };

        // create a single parent device
        Boolean CreateDevice(
            String name,
            Boolean exclusive,
            IInspectable tag, 
            out String createdDeviceId
        );

        // create a single endpoint under a parent device
        Boolean CreateEndpoint(
            String parentDeviceId,
            String name,
            MidiEndpointType endpointType,
            Boolean exclusive,
            MidiProtocol protocol,
            IInspectable tag,
            out String createdEndpointId
        );

        // delete a parent device and any endpoints it has
        Boolean DeleteDeviceAndEndpoints(
            String deviceId
        );

        // delete a single endpoint
        Boolean DeleteEndpoint(
            String endpointId
        );

        // Routing. A single output can connect to many inputs, if desired
        // TBD if we support merging with multiple outputs to a single input
        Boolean RouteConnectEndpoints(
            String outputEndpointId,
            String inputEndpointId
            );


    }
}