// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

// This is the moral equivalent of an output "port" in MIDI 1.0. MIDI 2.0 UMP Endpoints are
// almost always bidirectional. Output-only connections do not send discovery messages.

#include "midl_defines.h"
MIDI_IDL_IMPORT

import "IMidiOutputConnection.idl";
import "IMidiEndpointConnection.idl";


namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [default_interface]
    runtimeclass MidiOutputEndpointConnection :  
                                                Windows.Devices.Midi2.IMidiEndpointConnection,
                                                Windows.Devices.Midi2.IMidiOutputConnection

    {
        // Get the enumeration device selector for all compatible devices
        static String GetDeviceSelector();

        // Id from Windows. This can be used to retrieve the MidiDeviceInformation object with the PnP properties
        String DeviceId{ get; };

    }
}