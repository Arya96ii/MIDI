// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

// Group terminal blocks are being phased out in favor of Function Blocks, but
// will still be found in devices. See MIDI implementation guide and 
// documentation to better understand the relationship between Group Terminal
// Blocks and Function Blocks

import "MidiGroupTerminalBlockDirectionEnum.idl";
import "MidiGroupTerminalBlockProtocolEnum.idl";
import "MidiGroup.idl";

#include "midl_defines.h"
MIDI_IDL_IMPORT


namespace Windows.Devices.Midi2
{

    [MIDI_API_CONTRACT(1)]
    [default_interface]
    runtimeclass MidiGroupTerminalBlock
    {
        MidiGroupTerminalBlock();

        String Id{ get; };

        // this is essentially the string referred to by iBlockItem
        String Name{ get; };

        MidiGroupTerminalBlockDirection Direction { get; };
        MidiGroupTerminalBlockProtocol Protocol { get; };

        // rather than number of groups and a start group, we just have a vector of groups
        // here to make it flexible and to be consistent with what we do for function blocks
        IVectorView<MidiGroup> IncludedGroups{ get; };
        // TODO: After removing IsActive from the Group type, do we need to track it separately?


        // Note: 0x0000 is unknown or not fixed
        // 0x0001 is 31.24kb/s
        // all others are 4kb/second * value
        UInt16 MaxDeviceInputBandwidthIn4KBSecondUnits{ get; };
        UInt16 MaxDeviceOutputBandwidthIn4KBSecondUnits{ get; };
    }
}