// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

#include "midl_defines.h"
MIDI_IDL_IMPORT

import "MidiTransportPluginInformation.idl";
import "MidiMessageProcessingPluginInformation.idl";
import "MidiServicePingResponseSummary.idl";

import "MidiSessionInformation.idl";

namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [default_interface]
    static runtimeclass MidiService
    {
        static MidiServicePingResponseSummary PingService(UInt8 pingCount);
        static MidiServicePingResponseSummary PingService(UInt8 pingCount, UInt32 timeoutMilliseconds);

        // list all the installed transports like Virtual, USB, BLE1, etc
        static IVectorView<MidiTransportPluginInformation> GetInstalledTransportPlugins();
        static IVectorView<MidiMessageProcessingPluginInformation> GetInstalledMessageProcessingPlugins();


        // for the first release, this will always return false. But developers want to be able
        // to code with this in mind in the future, without changing code/logic

  //      static Boolean IsMessageSchedulingEnabled{ get; };

        static UInt32 GetOutgoingMessageQueueMaxMessageCapacity();


        static IVectorView<MidiSessionInformation> GetActiveSessions();



    }
}

