// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================


// Interface for settings classes that transport SDK plugins will implement when 
// providing custom connection settings for their transports

#include "midl_defines.h"
MIDI_IDL_IMPORT

import "IMidiEndpointDefinedConnectionSettings.idl";

import "MidiEndpointConnectionSharingEnum.idl";
import "IMidiEndpointMessageProcessingPlugin.idl";


namespace Windows.Devices.Midi2
{
    [MIDI_API_CONTRACT(1)]
    [MIDI_INTERFACE_UUID("d66abb68-5e24-45b0-b4c3-eb80e101d250",1.0)]
    interface IMidiEndpointConnection
    {
        // just a map key for this connection.
        String ConnectionId{ get; };

        // app-supplied optional tag. Can hold whatever information they may want to show in a list
        IInspectable Tag{ get; set; };

        // true if this endpoint connection is actually connected.
        // here for cases when the app holds on to an instance of this outside of the map
        Boolean IsOpen{ get; };

        // the sharing mode that is currently active

        MidiEndpointConnectionSharing ActiveSharingMode{ get; };

        IMidiEndpointDefinedConnectionSettings Settings{ get; };

        Boolean Open();

        IVector<IMidiEndpointMessageProcessingPlugin> MessageProcessingPlugins{ get; };

    }
}