// Copyright (c) Microsoft Corporation.
// Licensed under the MIT License
// ============================================================================
// This is part of the Windows MIDI Services App API and should be used
// in your Windows application via an official binary distribution.
// Further information: https://github.com/microsoft/MIDI/
// ============================================================================

// This file needs to be 100% compatible with the C++/CX definitions for 
// WinRT MIDI 1.0. This is here for repointing the older classes to the
// new service and Windows MIDI Services in general. 

#include "winrt_midi1_midl_defines.h"
MIDI_IDL_IMPORT

import "MidiMessageTypeEnum.idl";

namespace MIDI_ROOT_NAMESPACE_IDL
{
    [MIDI1_SHIM_API_CONTRACT(1)]
    [MIDI_INTERFACE_UUID("79767945-1094-4283-9BE0-289FC0EE8334",1.0)]
    interface IMidiMessage
    {
        // NOTE: the semantics of this timestamp are different from the MIDI 2 API version.
        // instead of an absolute tick, it's a timestamp delta from when the port was opened.
        // given that we weren't multi-client in the past, to maintain compatibility, we'll
        // need to default this to be the timestamp since the API port object was created, so 
        // it would be generated locally, not in the service
        // 
        // TODO: Consider adding an options class for MIDI 1.0 behavior in this API. That
        // would control things like this.
        Windows.Foundation.TimeSpan Timestamp{ get; };

        MidiMessageType Type{ get; };

        Windows.Storage.Streams.IBuffer RawData{ get; };
    }
}